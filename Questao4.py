# -*- coding: utf-8 -*-
"""Questao4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-7XZWxVmgH3OPl2Hb9vgTOvB3oQl03lv
"""

## QUEST√ÉO4

import time # Biblioteca para criar intervalo de tempo
import pandas as pd
from IPython.display import clear_output # Biblioteca para limpar terminal -> n√£o sei se funciona no vscode

# Definir posi√ß√µes de cada pe√ßa baseado na matriz principal abaixo (montar tabuleiro)
def montarL(y,x):
  return [y-2,x],[y-1,x],[y,x],[y,x+1]

def montarQ(y,x):
  return [y,x],[y,x+1],[y-1,x],[y-1,x+1]

'''
exemplo:

x,y x+1,y
x,y+1 x+1,y+1

se eu quiser colocar uma pe√ßa X na matriz, eu posso definir uma posi√ß√£o vari√°vel
x,y para que eu aplique um valor nela e modifique posteriormente

'''

# Criar tabuleiro
def montarTabuleiro():
  return pd.DataFrame([
    ['‚ø¥','‚ø¥','‚ø¥','‚ø¥'],
    ['‚ø¥','‚ø¥','‚ø¥','‚ø¥'],
    ['‚ø¥','‚ø¥','‚ø¥','‚ø¥'],
    ['‚ø¥','‚ø¥','‚ø¥','‚ø¥'],
    ['‚ø¥','‚ø¥','‚ø¥','‚ø¥'],
    ['‚ø¥','‚ø¥','‚ø¥','‚ø¥'],
    ['‚ø¥','‚ø¥','‚ø¥','‚ø¥'],
    ['‚ø¥','‚ø¥','‚ø¥','‚ø¥'],
    ['‚ø¥','‚ø¥','‚ø¥','‚ø¥']])

# Definir limites de espa√ßos que as pe√ßas podem ocupar
x_valores=range(0,4)
y_valores=range(0,9)

# Definindo pontua√ß√£o
ponto='Infelizmente voc√™ n√£o pontuou...'

# Criar matriz
matriz=montarTabuleiro()
print(matriz)

posicao_relativa=int(input('Insira um index (0, 1 ou 2) para inserir o L. '))

clear_output() # limpando terminal

# "Gravidade" da pe√ßa L com intervalo de tempo
for certa_coordenada_y in range(len(matriz)):

  if certa_coordenada_y < len(matriz): # Parando atualiza√ß√£o da posi√ß√£o para printar a pe√ßa no final
    clear_output()
    matriz=montarTabuleiro()

  # Com base em uma certa coordenada y, a fun√ß√£o varia fazendo a pe√ßa descer
  coordenadas_L=montarL(certa_coordenada_y,posicao_relativa)

  # Adquirindo as coordenadas constantes da pe√ßa
  for coordenada in coordenadas_L:
    cd1=coordenada[0]
    cd2=coordenada[1]
    if cd2 in x_valores and cd1 in y_valores: # se a pe√ßa estiver dentro do plano e o caractere que ela quer inserir estiver vazio '‚ø¥', o programa preenche 'ñ£Ø'
      if matriz.loc[cd1,cd2]=='‚ø¥':
        matriz.loc[cd1,cd2]='ñ£Ø'
      else:
        break

  # Printando matriz com delay para dar efeito visual no terminal
  print(matriz)
  time.sleep(0.3)

limite_atingido=8

posicao_relativa_2=int(input('Insira um index (0, 1 ou 2) para inserir o QUADRADO. '))
clear_output()

for certa_coordenada_y_2 in range(len(matriz)):

  # Printar pe√ßa L j√° inserida
  coordenadas_L=montarL(8,posicao_relativa)

  # Adquirindo as coordenadas constantes da pe√ßa
  for coordenada in coordenadas_L:
    cd1=coordenada[0]
    cd2=coordenada[1]
    if cd2 in x_valores and cd1 in y_valores:
      if matriz.loc[cd1,cd2]=='‚ø¥':
        matriz.loc[cd1,cd2]='ñ£Ø'
      else:
        break

  # Printar pe√ßa QUADRADO
  coordenadas_Q=montarQ(certa_coordenada_y_2,posicao_relativa_2)

  # Adquirindo as coordenadas constantes da pe√ßa QUADRADO
  if limite_atingido!=0:
    for coordenada in coordenadas_Q:
      qd1=coordenada[0]
      qd2=coordenada[1]
      if qd2 in x_valores and qd1 in y_valores:
        if matriz.loc[qd1,qd2]=='‚ø¥':
          matriz.loc[qd1,qd2]='ñ£Ø'
        else:
          coordenada_fixa=certa_coordenada_y_2 # Fixo a coordenada onde o quadrado parou
          limite_atingido=0 # Digo ao sistema que o quadrado parou
          break

  # Se o quadrado estiver parado, ele printa de forma diferente a exata posi√ß√£o que o quadrado parou
  if limite_atingido==0:

    coordenadas_Q=montarQ(coordenada_fixa,posicao_relativa_2)

    for coordenada in coordenadas_Q:
      qd1=coordenada[0]
      qd2=coordenada[1]
      if qd2 in x_valores and qd1 in y_valores:
        if matriz.loc[qd1-1,qd2]=='‚ø¥':
          matriz.loc[qd1-1,qd2]='ñ£Ø'

  print(matriz)
  time.sleep(0.3)

  if certa_coordenada_y_2 < (len(matriz)-1): # Parando atualiza√ß√£o da posi√ß√£o para printar a pe√ßa no final
    clear_output()
    matriz=montarTabuleiro()

# Checando se √∫ltima camada est√° completa para pontuar
if (matriz.iloc[8] == 'ñ£Ø').all():
  matriz.loc[8,0]='‚ø¥'
  matriz.loc[8,1]='‚ø¥'
  matriz.loc[8,2]='‚ø¥'
  matriz.loc[8,3]='‚ø¥'
  ponto='Parab√©ns, voc√™ pontuou!'

# Finalizando
clear_output()
print(matriz,'\n',ponto)